name: "Terraform"

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  DIGITALOCEAN_TOKEN: ${{ secrets.DIGITALOCEAN_TOKEN }}
  ARM_CLIENT_ID: ${{ secrets.TF_ARM_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.TF_ARM_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.TF_ARM_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.TF_ARM_TENANT_ID }}

jobs:
  plan:
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash
        working-directory: ${{ github.workspace }}/src

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_wrapper: false

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate -no-color

      - name: Terraform Format
        run: terraform fmt -check

      - name: Terraform Plan
        run: terraform plan

      # - name: Terraform Apply
      #   run: terraform apply -auto-approve

  apply:
    needs: [plan]
    runs-on: ubuntu-20.04
    environment:
      name: apply
    defaults:
      run:
        shell: bash
        working-directory: ${{ github.workspace }}/src

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply
        run: terraform apply -auto-approve

  destroy:
    runs-on: ubuntu-20.04
    environment:
      name: destroy
    defaults:
      run:
        shell: bash
        working-directory: ${{ github.workspace }}/src

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Terraform Init
        run: terraform init

      - name: Terraform Destroy
        run: terraform destroy -auto-approve
